class BinaryTree:
    def __init__(self):
        self.root = None
        self.size = 0
        self.list = []

    # ... other methods ...

    def get_parent(self, i):
        if i <= 0 or i >= self.size:
            return None
        if i % 2 == 0:
            return self.list[(i - 2) // 2]
        else:
            return self.list[(i - 1) // 2]

    def get_left_child(self, i):
        if i < 0 or i >= self.size:
            return None
        left_child_index = 2 * i + 1
        if left_child_index >= self.size:
            return None
        return self.list[left_child_index]

    def get_right_child(self, i):
        if i < 0 or i >= self.size:
            return None
        right_child_index = 2 * i + 2
        if right_child_index >= self.size:
            return None
        return self.list[right_child_index]
        
        
        parent = (i-1) // 2, left child = 2 * i + 1, right child = 2 * i + 2
